#+STARTUP: showall indent hidestars

#+TITLE: JFT programming language

* Introduction

Опираясь на https://github.com/kanaka/mal и некоторые собственные идеи, я
бы хотел построить кроссплатформенный лисп-подобный язык с нуля,
т.е. начиная от некоторой абстрактной машины, о которой известно только
то, что она имеет некоторое количество регистров и стек.

* Abstract assembler

Первый шаг - создание "абстрактного ассемблера" машины с несколькими
регистрами и стеком, который нужен для двух вещей:
- чтобы можно было написать на нем минимальную форт-машину
- чтобы будущий лисп мог самостоятельно производить машинный код

[[file:aasm.org][Abstract Assembler]]

[TODO:gmm] Также необходимо уметь создавать исполняемые файлы

* Minimal Forth Machine

Далее на абстрактном ассемблере мы пишем минимальную форт-машину, чтобы
уже на ней написать все остальное.

[[file:mfm.org][Minimal Forth Mashine]]

* TODO Forth Assembler

Побочный вариант нужный для JIT-компиляции

* TODO Garbage Collector

Нужен для лиспа

* TODO Minimal Lisp System

* TODO Prolog-like solver (SAT)

* TODO Planner features

* TODO Refal features

* TODO Something else
